-- MySQL Script generated by MySQL Workbench
-- Tue Nov  7 19:50:38 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Cliente` (
  `idCliente` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(60) NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  `rg` VARCHAR(11) NULL,
  `endereco` VARCHAR(120) NULL,
  `complemento` VARCHAR(60) NULL,
  `cidade` VARCHAR(60) NULL,
  `estado` VARCHAR(45) NULL,
  `cep` VARCHAR(8) NULL,
  `telefone` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`idCliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Forma_Pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Forma_Pagamento` (
  `idForma_Pagamento` INT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NULL,
  PRIMARY KEY (`idForma_Pagamento`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Fornecedor` (
  `idFornecedor` INT NULL AUTO_INCREMENT,
  `nome` VARCHAR(60) NOT NULL,
  `cnpj` VARCHAR(13) NULL,
  `endereco` VARCHAR(120) NULL,
  `cidade` VARCHAR(60) NULL,
  `estado` VARCHAR(60) NULL,
  `complemento` VARCHAR(60) NULL,
  `cep` VARCHAR(8) NULL,
  `telefone` VARCHAR(12) NOT NULL,
  `idForma_Pagamento` INT NOT NULL,
  PRIMARY KEY (`idFornecedor`, `idForma_Pagamento`),
  INDEX `fk_Fornecedor_Forma_Pagamento1_idx` (`idForma_Pagamento` ASC),
  CONSTRAINT `fk_Fornecedor_Forma_Pagamento1`
    FOREIGN KEY (`idForma_Pagamento`)
    REFERENCES `mydb`.`Forma_Pagamento` (`idForma_Pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Funcionario` (
  `idFuncionario` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(60) NOT NULL,
  `usuario` VARCHAR(45) NULL,
  `senha` VARCHAR(45) NULL,
  `cpf` VARCHAR(11) NOT NULL,
  `rg` VARCHAR(11) NULL,
  `telefone` VARCHAR(11) NOT NULL,
  `endereco` VARCHAR(120) NULL,
  `complemento` VARCHAR(60) NULL,
  `cidade` VARCHAR(60) NULL,
  `estado` VARCHAR(60) NULL,
  `cep` VARCHAR(8) NULL,
  `salario` FLOAT NOT NULL,
  PRIMARY KEY (`idFuncionario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Produto` (
  `idProduto` INT NULL AUTO_INCREMENT,
  `nome` VARCHAR(50) NULL,
  `preco_custo` FLOAT NULL,
  `margem` FLOAT NULL,
  `preco_final` FLOAT NULL,
  `quantidade` INT NULL,
  `codigo_barras` VARCHAR(45) NULL,
  `observacao` VARCHAR(100) NULL,
  `idFornecedor` INT NOT NULL,
  `idForma_Pagamento` INT NOT NULL,
  PRIMARY KEY (`idProduto`, `idFornecedor`, `idForma_Pagamento`),
  INDEX `fk_Produto_Fornecedor1_idx` (`idFornecedor` ASC, `idForma_Pagamento` ASC),
  CONSTRAINT `fk_Produto_Fornecedor1`
    FOREIGN KEY (`idFornecedor` , `idForma_Pagamento`)
    REFERENCES `mydb`.`Fornecedor` (`idFornecedor` , `idForma_Pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PlanoContas_Capa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PlanoContas_Capa` (
  `idPlanoContas_Capa` INT NULL AUTO_INCREMENT,
  `data` DATE NULL,
  `entrada` CHAR(1) NOT NULL,
  `idForma_Pagamento` INT NOT NULL,
  `idFornecedor` INT NOT NULL,
  `situacao` CHAR(1) NULL,
  `valor_total` FLOAT NULL,
  PRIMARY KEY (`idPlanoContas_Capa`, `idForma_Pagamento`, `idFornecedor`),
  INDEX `fk_PlanoContas_Capa_Forma_Pagamento1_idx` (`idForma_Pagamento` ASC),
  INDEX `fk_PlanoContas_Capa_Entrada_Fornecedor1_idx` (`idFornecedor` ASC),
  CONSTRAINT `fk_PlanoContas_Capa_Forma_Pagamento1`
    FOREIGN KEY (`idForma_Pagamento`)
    REFERENCES `mydb`.`Forma_Pagamento` (`idForma_Pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PlanoContas_Capa_Entrada_Fornecedor1`
    FOREIGN KEY (`idFornecedor`)
    REFERENCES `mydb`.`Fornecedor` (`idFornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`PlanoContas_Itens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`PlanoContas_Itens` (
  `idPlanoContas_Itens` INT NULL AUTO_INCREMENT,
  `idPlanoContas_Capa` INT NOT NULL,
  `idProduto` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`idPlanoContas_Itens`, `idPlanoContas_Capa`, `idProduto`),
  INDEX `fk_PlanoContas_Itens_PlanoContas_Capa1_idx` (`idPlanoContas_Capa` ASC),
  INDEX `fk_PlanoContas_Itens_Produto1_idx` (`idProduto` ASC),
  CONSTRAINT `fk_PlanoContas_Itens_PlanoContas_Capa1`
    FOREIGN KEY (`idPlanoContas_Capa`)
    REFERENCES `mydb`.`PlanoContas_Capa` (`idPlanoContas_Capa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PlanoContas_Itens_Produto1`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Venda_Capa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Venda_Capa` (
  `idVenda_Capa` INT NULL AUTO_INCREMENT,
  `data` DATE NOT NULL,
  `idForma_Pagamento` INT NOT NULL,
  `idCliente` INT NOT NULL,
  `valor_total` FLOAT NULL,
  `status` CHAR(1) NOT NULL,
  `pre_venda` CHAR(1) NOT NULL,
  `comanda` VARCHAR(15) NULL,
  `idFuncionario` INT NOT NULL,
  PRIMARY KEY (`idVenda_Capa`, `idForma_Pagamento`, `idCliente`, `idFuncionario`),
  INDEX `fk_Venda_Capa_Forma_Pagamento1_idx` (`idForma_Pagamento` ASC),
  INDEX `fk_Venda_Capa_Cliente1_idx` (`idCliente` ASC),
  INDEX `fk_Venda_Capa_Funcionario1_idx` (`idFuncionario` ASC),
  CONSTRAINT `fk_Venda_Capa_Forma_Pagamento1`
    FOREIGN KEY (`idForma_Pagamento`)
    REFERENCES `mydb`.`Forma_Pagamento` (`idForma_Pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Capa_Cliente1`
    FOREIGN KEY (`idCliente`)
    REFERENCES `mydb`.`Cliente` (`idCliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Capa_Funcionario1`
    FOREIGN KEY (`idFuncionario`)
    REFERENCES `mydb`.`Funcionario` (`idFuncionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Venda_Itens`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Venda_Itens` (
  `idVenda_Itens` INT NULL AUTO_INCREMENT,
  `idVenda_Capa` INT NOT NULL,
  `idProduto` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`idVenda_Itens`, `idVenda_Capa`, `idProduto`),
  INDEX `fk_Venda_Itens_Venda_Capa1_idx` (`idVenda_Capa` ASC),
  INDEX `fk_Venda_Itens_Produto1_idx` (`idProduto` ASC),
  CONSTRAINT `fk_Venda_Itens_Venda_Capa1`
    FOREIGN KEY (`idVenda_Capa`)
    REFERENCES `mydb`.`Venda_Capa` (`idVenda_Capa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venda_Itens_Produto1`
    FOREIGN KEY (`idProduto`)
    REFERENCES `mydb`.`Produto` (`idProduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
